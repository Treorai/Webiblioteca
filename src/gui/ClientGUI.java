package gui;

import classes.pushArray;
import java.util.Arrays;
import java.util.List;
import java.util.Map;

public class ClientGUI extends javax.swing.JFrame {

    public ClientGUI(List<Map<String,String>> json) {
        String[] lista = new String[json.size()];
        for(int i = 0; i < json.size(); i++){
            lista[i] = json.get(i).get("display");
        }
        
        beforeInitComponents(json, lista);
        initComponents();
        laterInitComponents(json, lista);
        setLocationRelativeTo(null);
        setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jScrollPane_Titles = new javax.swing.JScrollPane(list_titles);
        jPanel_Info = new javax.swing.JPanel();
        jl_author = new javax.swing.JLabel();
        jtx_author = new javax.swing.JTextField();
        jl_title = new javax.swing.JLabel();
        jtx_title = new javax.swing.JTextField();
        jl_sub = new javax.swing.JLabel();
        jtx_sub = new javax.swing.JTextField();
        jl_genre = new javax.swing.JLabel();
        jtx_genre = new javax.swing.JTextField();
        jl_vol = new javax.swing.JLabel();
        jtx_vol = new javax.swing.JTextField();
        jl_type = new javax.swing.JLabel();
        jtx_type = new javax.swing.JTextField();
        jl_edition = new javax.swing.JLabel();
        jtx_edition = new javax.swing.JTextField();
        jl_located = new javax.swing.JLabel();
        jtx_located = new javax.swing.JTextField();
        jl_lang = new javax.swing.JLabel();
        jtx_lang = new javax.swing.JTextField();
        jl_obs = new javax.swing.JLabel();
        jScrollPane_obs = new javax.swing.JScrollPane();
        jtxa_obs = new javax.swing.JTextArea();
        jl_displayOutdoor = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jtx_searchbox = new javax.swing.JTextField();
        jb_search = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu_Arquivo = new javax.swing.JMenu();
        jMenuItem_Sair = new javax.swing.JMenuItem();
        jMenu_Ajuda = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Webiblioteca");

        jPanel_Info.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jl_author.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jl_author.setText("Autor");

        jtx_author.setEditable(false);
        jtx_author.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N

        jl_title.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jl_title.setText("Título");

        jtx_title.setEditable(false);
        jtx_title.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N

        jl_sub.setText("Subtítulo");

        jtx_sub.setEditable(false);

        jl_genre.setText("Gênero");

        jtx_genre.setEditable(false);

        jl_vol.setText("Volume");

        jtx_vol.setEditable(false);

        jl_type.setText("Tipo");

        jtx_type.setEditable(false);

        jl_edition.setText("Edição");

        jtx_edition.setEditable(false);

        jl_located.setText("Local");

        jtx_located.setEditable(false);

        jl_lang.setText("Idioma");

        jtx_lang.setEditable(false);

        jl_obs.setText("Observações");

        jtxa_obs.setEditable(false);
        jtxa_obs.setColumns(20);
        jtxa_obs.setRows(5);
        jScrollPane_obs.setViewportView(jtxa_obs);

        jl_displayOutdoor.setText(" ");

        javax.swing.GroupLayout jPanel_InfoLayout = new javax.swing.GroupLayout(jPanel_Info);
        jPanel_Info.setLayout(jPanel_InfoLayout);
        jPanel_InfoLayout.setHorizontalGroup(
            jPanel_InfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_InfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_InfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_InfoLayout.createSequentialGroup()
                        .addGroup(jPanel_InfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jl_located)
                            .addComponent(jl_obs))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel_InfoLayout.createSequentialGroup()
                        .addGroup(jPanel_InfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane_obs)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_InfoLayout.createSequentialGroup()
                                .addGroup(jPanel_InfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jl_sub)
                                    .addComponent(jl_genre))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel_InfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel_InfoLayout.createSequentialGroup()
                                        .addGroup(jPanel_InfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jtx_located, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
                                            .addComponent(jtx_genre, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jtx_type, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel_InfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jl_lang)
                                            .addComponent(jl_edition)
                                            .addComponent(jl_vol))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel_InfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jtx_vol, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                                            .addComponent(jtx_edition)
                                            .addComponent(jtx_lang)))
                                    .addComponent(jtx_sub)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_InfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jl_type)
                                .addGroup(jPanel_InfoLayout.createSequentialGroup()
                                    .addGroup(jPanel_InfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jl_author)
                                        .addComponent(jl_title))
                                    .addGap(31, 31, 31)
                                    .addGroup(jPanel_InfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jl_displayOutdoor, javax.swing.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE)
                                        .addComponent(jtx_author, javax.swing.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE)
                                        .addComponent(jtx_title)))))
                        .addContainerGap())))
        );
        jPanel_InfoLayout.setVerticalGroup(
            jPanel_InfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_InfoLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jl_displayOutdoor)
                .addGap(18, 18, 18)
                .addGroup(jPanel_InfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jl_author)
                    .addComponent(jtx_author, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel_InfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jl_title)
                    .addComponent(jtx_title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(jPanel_InfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jl_sub)
                    .addComponent(jtx_sub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel_InfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jl_genre)
                    .addComponent(jl_vol)
                    .addComponent(jtx_vol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtx_genre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel_InfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jl_type)
                    .addComponent(jl_edition)
                    .addComponent(jtx_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtx_edition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel_InfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jl_located)
                    .addComponent(jtx_located, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jl_lang)
                    .addComponent(jtx_lang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jl_obs)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane_obs)
                .addContainerGap())
        );

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/pesquisar.png"))); // NOI18N

        jb_search.setText("Buscar");

        jMenu_Arquivo.setText("Arquivo");

        jMenuItem_Sair.setText("Sair");
        jMenu_Arquivo.add(jMenuItem_Sair);

        jMenuBar1.add(jMenu_Arquivo);

        jMenu_Ajuda.setText("Ajuda");
        jMenuBar1.add(jMenu_Ajuda);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtx_searchbox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jb_search))
                    .addComponent(jScrollPane_Titles, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel_Info, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jtx_searchbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jb_search)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel_Info, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane_Titles, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        jPanel_Info.getAccessibleContext().setAccessibleName("");
        jPanel_Info.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void list_titlesMouseClicked(java.awt.event.MouseEvent evt, List<Map<String,String>> json, String[] lista){
        openBook(json, lista);
    }
    
    private void jb_searchActionPerformed(java.awt.event.ActionEvent evt, List<Map<String,String>> json, String[] lista){
        findBook(json, lista);
    }
    
    
    private void list_titlesKeyReleased(java.awt.event.KeyEvent evt, List<Map<String,String>> json, String[] lista){
        try{
            openBook(json, lista);
        }catch(Exception e){
            //do not crash if cannot find something to select
        }
    }

    

    //custom InitComponents outside the ide auto generated code that must happen before initComponents()
    private void beforeInitComponents(List<Map<String,String>> json, String[] lista){
        list_titles = new javax.swing.JList<>();
        list_titles.setModel(new javax.swing.AbstractListModel<String>() {
            public int getSize() { return lista.length; }
            public String getElementAt(int i) { return lista[i]; }
        });
        list_titles.setName("");
        list_titles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                list_titlesMouseClicked(evt, json, lista);
            }
        });
        list_titles.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                list_titlesKeyReleased(evt, json, lista);
            }
        });
        
    }
    
    //custom InitComponents outside the ide auto generated code that must happen fater initComponents()
    private void laterInitComponents(List<Map<String,String>> json, String[] lista){
        jb_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_searchActionPerformed(evt, json, lista);
            }
        });
    }
    
    /**
     * @param json
     */
    public static void main(List<Map<String,String>> json) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientGUI(json).setVisible(true);
            }
        });
        
    }
    
    //Print the book info on the pannel
    public void openBook(List<Map<String,String>> json, String[] lista){
        Map<String, String> tempObj = null;
        
        //Find the selected titles obj
        for(int i = 0; i < json.size(); i++){
            if(list_titles.getSelectedValue() == json.get(i).get("display")){
                tempObj = json.get(i);
                break;
            }
        }
        //Load full Object
        printBook(tempObj);
        
    }
    
    public void findBook(List<Map<String,String>> json, String[] lista){
        String[] listaSearch = new String[0];
        //find matches
        for(int i = 0; i < json.size(); i++){
            if(json.get(i).get("display").contains(jtx_searchbox.getText())){
                listaSearch = pushArray.push(listaSearch, json.get(i).get("display"));
            }
        }
        //listaSearch must be final
        final var finalSearch = listaSearch;
        //print matches
        list_titles.setModel(new javax.swing.AbstractListModel<String>() {
            @Override
            public int getSize() { return finalSearch.length; }
            @Override
            public String getElementAt(int i) { return finalSearch[i]; }
        });
        
    }
    
    public void printBook(Map<String,String> tempObj){
        jl_displayOutdoor.setText(tempObj.get("display"));
        jtx_title.setText(tempObj.get("title"));
        jtx_author.setText(tempObj.get("author"));
        jtx_sub.setText(tempObj.get("sub"));
        jtx_vol.setText(tempObj.get("vol"));
        jtx_edition.setText(tempObj.get("edition"));
        jtx_genre.setText(tempObj.get("genre"));
        jtx_lang.setText(tempObj.get("lang"));
        jtx_type.setText(tempObj.get("type"));
        jtx_located.setText(tempObj.get("located"));
        jtxa_obs.setText(tempObj.get("obs"));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JLabel jLabel1;
    javax.swing.JMenuBar jMenuBar1;
    javax.swing.JMenuItem jMenuItem_Sair;
    javax.swing.JMenu jMenu_Ajuda;
    javax.swing.JMenu jMenu_Arquivo;
    javax.swing.JPanel jPanel_Info;
    javax.swing.JPopupMenu jPopupMenu1;
    javax.swing.JScrollPane jScrollPane_Titles;
    javax.swing.JScrollPane jScrollPane_obs;
    javax.swing.JButton jb_search;
    javax.swing.JLabel jl_author;
    javax.swing.JLabel jl_displayOutdoor;
    javax.swing.JLabel jl_edition;
    javax.swing.JLabel jl_genre;
    javax.swing.JLabel jl_lang;
    javax.swing.JLabel jl_located;
    javax.swing.JLabel jl_obs;
    javax.swing.JLabel jl_sub;
    javax.swing.JLabel jl_title;
    javax.swing.JLabel jl_type;
    javax.swing.JLabel jl_vol;
    javax.swing.JTextField jtx_author;
    javax.swing.JTextField jtx_edition;
    javax.swing.JTextField jtx_genre;
    javax.swing.JTextField jtx_lang;
    javax.swing.JTextField jtx_located;
    javax.swing.JTextField jtx_searchbox;
    javax.swing.JTextField jtx_sub;
    javax.swing.JTextField jtx_title;
    javax.swing.JTextField jtx_type;
    javax.swing.JTextField jtx_vol;
    javax.swing.JTextArea jtxa_obs;
    // End of variables declaration//GEN-END:variables

    // Custom variables declaration
    javax.swing.JList<String> list_titles;
    // End of custom variables declaration
}
